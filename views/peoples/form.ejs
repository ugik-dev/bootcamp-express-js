<% layout('layout/app') %>
<h2 class="text-center">
  Form <%= action === 'edit' ? "Edit" : "Create" %> People
  <i class="bi bi-save"></i>
</h2>
<i className="icon bi-envelope"></i>
<form
  id="post_form"
  class="needs-validation"
  novalidate
  enctype="multipart/form-data"
>
  <div class="mb-3">
    <label for="name" class="form-label">Nama</label>
    <input type="text" class="form-control" name="people[name]" id="name" />
    <div class="valid-feedback">Looks good!</div>
    <div class="invalid-feedback">Please check!!.</div>
  </div>
  <div class="mb-3">
    <label for="nik" class="form-label">NIK</label>
    <input type="text" class="form-control" name="people[nik]" id="nik" />
    <div class="valid-feedback">Looks good!</div>
    <div class="invalid-feedback">Please check!!.</div>
  </div>
  <div class="mb-3">
    <label for="dob" class="form-label">Tanggal Lahir</label>
    <input
      type="date"
      class="form-control"
      name="people[dob]"
      id="dob"
      required
    />
    <div class="valid-feedback">Looks good!</div>
    <div class="invalid-feedback">Please check!!.</div>
  </div>
  <div class="mb-3">
    <label for="parent_name" class="form-label">Nama Orang Tua</label>
    <input
      type="text"
      class="form-control"
      id="parent_name"
      name="people[parent_name]"
      required
    />
    <div class="valid-feedback">Looks good!</div>
    <div class="invalid-feedback">Please check!!.</div>
  </div>
  <div class="mb-3">
    <label for="image" class="form-label">Image Url</label>
    <input type="file" class="form-control" id="image" name="image" <%= action
    === 'edit' ? "" : "required" %> accept="image/*" multiple />
    <div class="valid-feedback">Looks good!</div>
    <div class="invalid-feedback">Please check!!.</div>
  </div>
  <div class="mb-3">
    <label for="address" class="form-label">Alamat</label>
    <textarea
      rows="3"
      class="form-control"
      id="address"
      name="people[address]"
      required
    ></textarea>
    <div class="valid-feedback">Looks good!</div>
    <div class="invalid-feedback">Please check!!.</div>
  </div>

  <button class="btn btn-primary me-4" type="submit">
    <svg
      xmlns="http://www.w3.org/2000/svg"
      width="16"
      height="16"
      fill="currentColor"
      class="bi bi-cloud-download"
      viewBox="0 0 16 16"
    >
      <path
        d="M4.406 1.342A5.53 5.53 0 0 1 8 0c2.69 0 4.923 2 5.166 4.579C14.758 4.804 16 6.137 16 7.773 16 9.569 14.502 11 12.687 11H10a.5.5 0 0 1 0-1h2.688C13.979 10 15 8.988 15 7.773c0-1.216-1.02-2.228-2.313-2.228h-.5v-.5C12.188 2.825 10.328 1 8 1a4.53 4.53 0 0 0-2.941 1.1c-.757.652-1.153 1.438-1.153 2.055v.448l-.445.049C2.064 4.805 1 5.952 1 7.318 1 8.785 2.23 10 3.781 10H6a.5.5 0 0 1 0 1H3.781C1.708 11 0 9.366 0 7.318c0-1.763 1.266-3.223 2.942-3.593.143-.863.698-1.723 1.464-2.383"
      />
      <path
        d="M7.646 15.854a.5.5 0 0 0 .708 0l3-3a.5.5 0 0 0-.708-.708L8.5 14.293V5.5a.5.5 0 0 0-1 0v8.793l-2.146-2.147a.5.5 0 0 0-.708.708z"
      />
    </svg>
    Submit
  </button>
  <a class="btn btn-warning" href="/people">
    <svg
      xmlns="http://www.w3.org/2000/svg"
      width="16"
      height="16"
      fill="currentColor"
      class="bi bi-box-arrow-in-left"
      viewBox="0 0 16 16"
    >
      <path
        fill-rule="evenodd"
        d="M10 3.5a.5.5 0 0 0-.5-.5h-8a.5.5 0 0 0-.5.5v9a.5.5 0 0 0 .5.5h8a.5.5 0 0 0 .5-.5v-2a.5.5 0 0 1 1 0v2A1.5 1.5 0 0 1 9.5 14h-8A1.5 1.5 0 0 1 0 12.5v-9A1.5 1.5 0 0 1 1.5 2h8A1.5 1.5 0 0 1 11 3.5v2a.5.5 0 0 1-1 0z"
      />
      <path
        fill-rule="evenodd"
        d="M4.146 8.354a.5.5 0 0 1 0-.708l3-3a.5.5 0 1 1 .708.708L5.707 7.5H14.5a.5.5 0 0 1 0 1H5.707l2.147 2.146a.5.5 0 0 1-.708.708z"
      />
    </svg>
    Back</a
  >
</form>

<script>
    (() => {
    'use strict'

    // Fetch all the forms we want to apply custom Bootstrap validation styles to
    const forms = document.querySelectorAll('.needs-validation')
    const config = {
          headers: {
            'Content-Type': 'multipart/form-data'
          }
        };
    // Loop over them and prevent submission
    Array.from(forms).forEach(form => {
      form.addEventListener('submit', async (event) => {
        if (!form.checkValidity()) {
          event.preventDefault()
          event.stopPropagation()
        }else{
          event.preventDefault(); // Prevent default submit behavior
          const formData = new FormData(form);
          // const data = Object.fromEntries(formData.entries());

          // const imageFiles = document.getElementById('image').files;
          // for (let i = 0; i < imageFiles.length; i++) {
          //   formData.append('image', imageFiles[i]);
          // }

          try {
            <% if(action === 'edit'){ %>
              const response = await axios.patch("<%= `${base_url}/people/${people._id}` %>", formData);
            <% } else { %>
              const response = await axios.post("<%= base_url %>/people", formData, config);
            <% } %>
            alert("Response :" + response.data.message);
            // window.location.href = "/people";
          } catch (error) {
            alert("Error :" + error.response.data);
            console.log(error.response.data);
          }
        }

        form.classList.add('was-validated')
      }, false)
    })
  })()

    const form_e = document.querySelector("#post_form");

    <%  if(action === 'edit'){   %>
      form_e.querySelector('#name').value = "<%= people.name %>";
      document.querySelector('#name').disabled = true;
      form_e.querySelector('#dob').value = "<%= people.dob.toISOString().substring(0, 10) %>";
      form_e.querySelector('#nik').value = "<%= people.nik %>";
      form_e.querySelector('#parent_name').value = "<%= people.parent_name %>";
      form_e.querySelector('#image').value = "<%= people.image %>";
      form_e.querySelector('#address').value = "<%= people.address %>";
    <% } %>

    // form.addEventListener("submit", async (e) => {
    //   e.preventDefault();
    //   const formData = new FormData(form);
    //   const data = Object.fromEntries(formData.entries());
    //   try {
    //     <%  if(action === 'edit'){   %>
    //       const response = await axios.patch("<%= `${base_url}/people/${people._id}` %>", data);
    //     <% }else{ %>
    //       const response = await axios.post("<%= base_url %>/people", data);
    //     <% } %>
    //     alert("Response :" + response.data.message);
    //     window.location.href = "/people";
    //   } catch (error) {
    //     alert("Error :" + error.response.data);
    //     console.log(error.response.data);
    //   }
    // });
</script>
